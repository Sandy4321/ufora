#pragma once

#include "../../core/containers/TwoWaySetMap.hpp"
#include "ReasonerEntrypoint.hppml"

namespace Fora {

class ReasonerEntrypointGraph {
public:
	void addRoot(ReasonerEntrypoint root);

	void markDirty(ReasonerEntrypoint entrypoint);

	Nullable<ReasonerEntrypoint> popDirtyReachableFrame();

	//returns true if the set of edges has changed
	bool setEdges(ReasonerEntrypoint frame, const std::set<ReasonerEntrypoint>& called);

	const std::set<ReasonerEntrypoint>& getCalledFrames(ReasonerEntrypoint frame) const;

	const std::set<ReasonerEntrypoint>& getCallers(ReasonerEntrypoint frame) const;

	bool isDirty(ReasonerEntrypoint frame) const;

	bool isReachable(ReasonerEntrypoint frame) const;

private:
	void ensure(ReasonerEntrypoint entrypoint);

	void markReachable(ReasonerEntrypoint entrypoint);

	void verifyIsReachable(ReasonerEntrypoint entrypoint);

	std::set<ReasonerEntrypoint> mFrames;

	TwoWaySetMap<ReasonerEntrypoint, ReasonerEntrypoint> mFrameGraph;

	std::set<ReasonerEntrypoint> mRootFrames;

	//all reachable frames are in here, but some unreachable frames could
	//also be represented here.
	std::set<ReasonerEntrypoint> mReachableFrames;

	std::set<ReasonerEntrypoint> mDirtyFrames;

	std::set<ReasonerEntrypoint> mDirtyReachableFrames;
};

}
